#!/usr/bin/python
import sympy

n = 17450892350509567071590987572582143158927907441748820483575144211411640241849663641180283816984167447652133133054833591585389505754635416604577584488321462013117163124742030681698693455489404696371546386866372290759608301392572928615767980244699473803730080008332364994345680261823712464595329369719516212105135055607592676087287980208987076052877442747436020751549591608244950255761481664468992126299001817410516694015560044888704699389291971764957871922598761298482950811618390145762835363357354812871474680543182075024126064364949000115542650091904557502192704672930197172086048687333172564520657739528469975770627

#n = 60927735877056559130803069919621859729817223816091468870468728150535102345085544195001142179497747300756976118359991531766104121379004146329976732080428122272205922112100073487631152244297343150154109815442681320311122134731991282281969152492933055882377304091844616671159896354284349735375653609635116671867

print n

sq = sympy.sqrt(n)
"""
import sys
print sq
print sq + 1
sys.exit(1)
"""
lsq = sq - 100000
usq = sq + 100000

print lsq
print usq
primes = []
for i in range(lsq, usq):
    if sympy.isprime(i):
        primes.append(i)
    """"
    for j in range(lsq, usq):
        x = i * j
        if x == n:
            p = i
            q = j
            print "broken"
            break 
    else:
        continue
    break
    """

for p in primes:
    for q in primes:
        z = p *q
        if z == n:
            print "hey"

print len(primes)
print p
print q
